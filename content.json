[{"title":"php上传文件","date":"2016-11-09T09:56:26.000Z","path":"2016/11/09/php3(sql:array:string方法)/","text":"一、文件上传的相关配置 表单设置要进行文件的上传，需要对form表单进行特殊设置; 设定表单数据的提交方式为POST 设定enctype属性值为: multipart/form-data 为了避免用户等待许久之后才发现上传文件太大，可以在表单中添加MAX_FILE_SIZE隐藏域,通过设置其value值可以限制上传文件的大小; PHP设置 phpinfo();输出PHP设置信息 file_uploads是否允许通过HTTP上传文件，默认为ON upload_max_filesize允许上传文件大小的最大值，默认为2M，此指令必须小于post_max_size; upload_tmp_dir指定上传文件的临时存放路径，这个目录对于拥有此服务器进程的用户必须是可写的;如果未指定则使用系统默认值; post_max_size控制POST方式提交数据php所能够接收的最大数据量; 二、$_FILES 数组 $_FILES超级全局变量作用是存储各种与上传文件有关的信息; $_FILES是一个二维数组，数组中共有5项： $_FILES[“userfile”][“name”] 上传文件的名称 $_FILES[“userfile”][“type”] 上传文件的类型 $_FILES[“userfile”][“size”] 上传文件的大小, 以字节为单位 $_FILES[“userfile”][“tmp_name”] 文件上传后在服务器端储存的临时文件名 $_FILES[“userfile”][“error”] 文件上传相关的错误代码 注:userfile只是一个占位符，代表文件上传表单元素的名字; 因此这个值将根据你所给定的名称有所不同; 三、上传错误信息 $_FILES[‘userfile’][‘error’] 提供了在文件上传过程中出现的错误： UPLOAD_ERR_OK (value = 0) 如果文件上传成功返回0; UPLOAD_ERR_INI_SIZE (value = 1)如果试图上传的文件大小超出了 upload_max_filesize指令指定的值，则返回1; UPLOAD_ERR_FORM_SIZE (value = 2)如果试图上传的文件大小超出了MAX_FILE_SIZE指令（可能嵌入在HTML表单中）指定的值，则返回2; UPLOAD_ERR_PARTIAL (value = 3)如果文件没有完全上传，则返回3; 如网络出现错误，导致上传过程中断; UPLOAD_ERR_NO_FILE (value = 4)如果用户没有指定上传的文件就提交表单，则返回 四、文件上传函数1. is_uploaded_file() is_uploaded_file()函数确定参数filename指定的文件是否使用HTTP POST上传; `例： $file = $_FILES[&quot;file&quot;]; print_r($file); if(is_uploaded_file($file[&apos;tmp_name&apos;])){ copy($file[&apos;tmp_name&apos;],&quot;test2.txt&quot;); }else{ echo &quot;文件上传失败！&quot;; }` 2. move_uploaded_file() move_uploaded_file()作用是将上传文件从临时目录移动到目标目录; 虽然 copy()也可以实现同样功能，但move_uploaded_file()还提供了一种额外的 功能，它将检查由filename输入参数指定的文件确实是通过http post 上传机制 上传的。如果所指定的文件并非上传文件，则移动失败，返回false; `例： move_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;],&quot;1/test.jpg&quot;);` 数组一.数组的概念：数组可以理解为有序的（键-值)对组成的数据值的集合; 如果我们把变量理解为单个值的容器，那么数组就是可以包含多个值的容器;根据索引值的不同数组分为：索引数组和关联数组; array(key =&gt; value,key =&gt; value) 二.创建数组与其它语言的数组实现方式不同，php不需要在创建数组时指定其大小;因为php是一种松散类型的语言，所以甚至不需要在使用前先声明; 索引可以是整型数字或者是字符串; 索引数组：索引为整数,如果没有指定索引值则默认为零，依次递增; 关联数组：索引为字符串的数组; 直接对数组变量赋值$arr[key] = value; //高版本[value] 使用函数创建数组:range() 建立一个包含指定范围单元的数组 三、删除 数组或数组元素 unset 释放给定的变量 注意：删除数组元素不会重建索引; 1234$arr = array(1,2,3,4,5);unset($arr[1]);// $arr1 = array_values($arr);//重新要排序下标print_r($arr); 四、常用的数组函数 print_r() 打印数组 count() 取得数组大小 in_array() 检查数组中是否包含某个值123456$arr = array(1,2,3,4,5);if (in_array(11, $arr)) &#123; echo &quot;有&quot;;&#125;else&#123; echo &quot;没有&quot;;&#125; 五、遍历数组arr = [A,B,C,D,E,F] 1. for 循环遍历数组 2. foreach 循环遍历数组 3. 使用数组指针遍历数组 * key() 返回数组当前指针元素的索引; * current() 返回数组当前指针元素的值; * next() 将数组指针向前移动一位，并返回当前指针元素的值; 如果超出了数组元素的末尾，则返回FALSE * prev() 将数组指针往回移动一位, 并返回当前指针元素的值; 如果指针本来就位于数组的第一个位置则返回FALSE; * reset() 将指针指向第一个元素，并返回第一个元素的值 * end() 将数组指针指向最后一个元素, 并返回最后一个元素的值; * each() 返回数组当前指针元素的键和值,并将指针推进一个位置;如果内部指针越过了数组的末端，则 each() 返回 FALSE。 &gt;next()和each()的区别next返回值,each返回键和值(数组) 六、数组排序1. sort() 、 rsort() 对数组的value值进行升序和降序 2. ksort()、krsort() 对数组按索引进行升序或降序, 并保持索引关系 七、字符串与数组转换1. explode() 返回由字符串组成的数组 2. implode() 将数组元素连接成字符串 123456$str = &quot;a,b,c,d,e&quot;;$arr = explode(&quot;,&quot;, $str);//不加要劈开的标点,会报错print_r($arr);echo &quot;&lt;br&gt;&quot;;$str2 = implode(&quot;&quot;, $arr);//类似js的joinecho $str2; 字符串一、输出字符串 echo 是一个语法 ，不是函数echo 没有返回值; echo 可以输出多个值，使用逗号分隔; print 实际上不是一个函数（它是一个语言结构） printf() parseInt(10.55,”8”);//将10.55转化为8进制 %b二进制输出 //brianry %d整数输出 //data %f浮点数输出 //float %s字符串输出 //string printf(“整数：%d”, $str); printf(“浮点数：%.2f”, $str); printf(“字符串：%s”, $str); 1234printf(&quot;二进制:%b&quot;,100);//11001100printf(&quot;二进制:%b&quot;,1);//1printf(&quot;整数:%d&quot;,10.451);//10printf(&quot;浮点数:%.2f&quot;,10.451);//10.45 sprintf() 功能与printf相同，但不会直接输出结果; 12$num = sprintf(&quot;%d&quot;,6.21);//不用echo输出,是不会输出的echo $num; 二、查找与替换 strpos() stripos()与strpos()功能相同，只是查找时不区别大小写 第一次出现的位置;如果没有找到则返回FALSE;//类似indexof str_replace() str_ireplace()与str_replace()功能相同，只是不区分大小写;str_replace(find,change,str) 123456789101112$str = &quot;abcdefgdedc&quot;;$index = 0;$count = 0;$num = strpos($str,&quot;d&quot;,$index);//4是从第几个开始找 str.indexOf(&quot;d&quot;,0);//类似找父级定位,找d的个数while ($num) &#123; $count++; $index = $num+1; // echo $index.&quot;&lt;br&gt;&quot;;//4 8 10 $num = strpos($str, &quot;d&quot;,$index);//下一次&#125;echo $count;//3 三、截取字符串 substr() 从start位置取出length长度的字符，字符串位置开始值为零; 如果没有指定length，那么默认一直到字符串末尾; $str = &quot;abcdefdabkjldf&quot;; echo substr($str,3,1);//从第三个开始截取,第三个参数截取的长度 删除字符串 ltrim 函数删除字符串左侧空格或其他预定义字符; rtrim 函数删除字符串右侧空格或其他预定义字符; trim 函数删除字符串两侧空格或其他预定义字符; 四、其它字符串处理函数 strlen() 获取字符串长度 strtolower() 将字符串转换为小写字母 strtoupper() 将字符串转换为大写字母 strrev() 反转字符串 nl2br() 将字符串中换行 (\\n) 转换成 HTML 换行标签 () strip_tags() 删除字符串中HTML XML PHP 标签 htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体 正则preg_match,preg_replace,preg_split,preg_greppreg_match/preg_match_all1234$str = &quot;内容1内容2内容3内容4&quot;;//preg_match(&quot;/内容/&quot;,$str);//如果找到就返回1preg_match_all(&quot;/内容/&quot;, $str, $arr);//将要划分的内容,放到$arr里面print_r($arr); 实例二 12345//获取一个页面的部分东西 $con = file_get_contents(&quot;http://www.cnblogs.com/&quot;); $reg = &apos;/&lt;h3\\&gt;.+&lt;\\/h3&gt;/&apos;;//.表示所有 preg_match_all($reg, $con,$arr); print_r($arr); preg_replace1234$str = &quot;abc@163.com,abc@163.com&quot;;$reg = &apos;/@\\d+/&apos;;//js可以不加&quot;&quot;,但是php必须加&quot;&quot;$str = preg_replace($reg, &quot;4ddd&quot;, $str);echo $str; preg_split12345$str = &quot;abc1423de456&quot;;// $reg = &quot;/\\d+/&quot;;//以数字来劈开$reg = &quot;/[a-z]+/&quot;;//以字母来劈开 &quot;,1423,456&quot;;$arr = preg_split($reg, $str);print_r($arr); preg_grep12345678//判断是否有数字,由的话就保存起来$arr = [12,&apos;abc&apos;,53,&apos;c&apos;,10];$reg = &apos;/\\d/&apos;;$newarr = preg_grep($reg,$arr);//返回的下标不会变print_r($newarr); SQL注意的步骤 md5加密是32个字节 A_I是自增 排序规格:utf8_general_ci 字段数:表示有几列 在控制台写代码 ==&gt;执行是ctrl + enter 再控制台写代码要注意insert into user (username) values (‘ass’) ===&gt;字段名一定要加`` 一、SQL 语言简介 SQL (structured Query Language) 结构化查询语言;主要用途是构造各种数据库系统操作指令，如 SELECT、INSERT、UPDATE、DELETE; SQL命令可以分类以下三大类别： DML(Data Manipulation Language 数据处理语言）： 这类命令主要包括 SELECT、INSERT、UPDATE、DELETE等用来从数据表读出数据，把数据存入数据表或是对数据表里的现有记录进行修改的命令; DDL(Data Definition Language 数据定义语言）： 这类命令主要包括CREATE TABLE、ALTER TABLE 等用来定义和改变数据库结构的命令; DCL(Data Control Language 数据控制语言）： 这类命令主要包括GRANT、REVOKE以及另外几个用来帮助人们设置和调整MySQL访问控制机制的SQL命令; 二、查询(SELECT) 简单查询 SELECT * FROM tablename 限制查询结果中的数据列个数 SELECT column1,column2 FROM tablename 确定数据表里有多少条数据记录 SELECT COUNT(id) FROM tablename //计算的同时改变字段名as:SELECT COUNT(id) as len FROM tablename//把字段名改为len 三、WHERE子句 WHERE子句设置查询条件，过滤掉不需要的数据行。 例如查询年龄大于20的记录： SELECT * FROM usertable WHERE age&gt;20 WHERE子句可包括各种条件运算符： 比较运算符 ` = 等于 大于 = 大于等于 &lt; 小于 &lt;= 小于等于 &lt;&gt; 不等于` 逻辑运算符 AND 如果组合的条件都是TRUE,返回TRUE OR 如果组合的条件其一是TRUE,返回TRUE NOT 如果条件是FALSE,返回TRUE 四、限制查询结果中的数据记录个数(LIMIT)LIMIT子句用于强制SELECT语句返回指定的记录数。LIMIT接受一个或两个数字参数。参数必须是一个整数常量。如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的最大数目。 注意：初始记录行的偏移量是0而不是1。 (适合用于分页) `例： 检索前5个记录行 SELECT * FROM table LIMIT 5; 检索记录行 6-15 SELECT * FROM table LIMIT 5,10; ` 五、对查询结果进行排序 (ORDER BY) 使用ORDER BY子句对查询返回的结果排序。 ORDER BY子句的语法格式为： ORDER BY {column_name [ASC|DESC]} [,…n] 其中ASC表示升序，为默认值，DESC为降序 例： SELECT * FROM user ORDER BY uid ASC SELECT * FROM user ORDER BY uid DESC SELECT * FROM user ORDER BY regdate DESC,username ASC; 六、插入数据记录(INSERT)`例： INSERT INTO user (username,password) VALUES (&apos;admin&apos;,&apos;123456&apos;)` 一次插入多条记录INSERT INTO user (username, password) VALUES (&#39;user1&#39;, &#39;123456&#39;), (&#39;user2&#39;,&#39;123456&#39;) 七、修改数据记录（UPDATE）`例： UPDATE user SET username = &apos;admin1&apos;, passwd =&apos;12345678&apos; WHERE uid = 10` 八、删除数据记录（DELETE）`例： DELETE FROM user WHERE uid = 10`","content":"<h2 id=\"一、文件上传的相关配置\"><a href=\"#一、文件上传的相关配置\" class=\"headerlink\" title=\"一、文件上传的相关配置\"></a>一、文件上传的相关配置</h2><ul>\n<li><p>表单设置<br>要进行文件的上传，需要对form表单进行特殊设置;</p>\n<ol>\n<li>设定表单数据的提交方式为POST</li>\n<li>设定enctype属性值为: multipart/form-data </li>\n<li>为了避免用户等待许久之后才发现上传文件太大，可以在表单中添加<br>MAX_FILE_SIZE隐藏域,通过设置其value值可以限制上传文件的大小;</li>\n</ol>\n</li>\n<li><p>PHP设置<br>   phpinfo();输出PHP设置信息</p>\n<ol>\n<li><p>file_uploads<br>是否允许通过HTTP上传文件，默认为ON</p>\n</li>\n<li><p>upload_max_filesize<br>允许上传文件大小的最大值，默认为2M，此指令必须小于post_max_size;</p>\n</li>\n<li><p>upload_tmp_dir<br>指定上传文件的临时存放路径，这个目录对于拥有此服务器进程的用户必须是可<br>写的;如果未指定则使用系统默认值;</p>\n</li>\n<li><p>post_max_size<br>控制POST方式提交数据php所能够接收的最大数据量;    </p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"二、-FILES-数组\"><a href=\"#二、-FILES-数组\" class=\"headerlink\" title=\"二、$_FILES 数组\"></a>二、$_FILES 数组</h2><ul>\n<li><p>$_FILES超级全局变量作用是存储各种与上传文件有关的信息;<br>  $_FILES是一个二维数组，数组中共有5项：</p>\n<ol>\n<li><p>$_FILES[“userfile”][“name”]    上传文件的名称</p>\n</li>\n<li><p>$_FILES[“userfile”][“type”]     上传文件的类型</p>\n</li>\n<li><p>$_FILES[“userfile”][“size”]     上传文件的大小, 以字节为单位</p>\n</li>\n<li><p>$_FILES[“userfile”][“tmp_name”]    文件上传后在服务器端储存的临时文件名</p>\n</li>\n<li><p>$_FILES[“userfile”][“error”]     文件上传相关的错误代码</p>\n<blockquote>\n<p>注:userfile只是一个占位符，代表文件上传表单元素的名字; 因此这个值将根据你所给定<br>的名称有所不同;</p>\n</blockquote>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"三、上传错误信息\"><a href=\"#三、上传错误信息\" class=\"headerlink\" title=\"三、上传错误信息\"></a>三、上传错误信息</h2><ul>\n<li><p>$_FILES[‘userfile’][‘error’]  提供了在文件上传过程中出现的错误：</p>\n<ol>\n<li><p>UPLOAD_ERR_OK (value = 0)      如果文件上传成功返回0;</p>\n</li>\n<li><p>UPLOAD_ERR_INI_SIZE (value = 1)<br>如果试图上传的文件大小超出了 upload_max_filesize指令指定的值，则返回1;</p>\n</li>\n<li><p>UPLOAD_ERR_FORM_SIZE (value = 2)<br>如果试图上传的文件大小超出了MAX_FILE_SIZE指令（可能嵌入在HTML表单中）指定的值，<br>则返回2;</p>\n</li>\n<li><p>UPLOAD_ERR_PARTIAL (value = 3)<br>如果文件没有完全上传，则返回3; 如网络出现错误，导致上传过程中断;</p>\n</li>\n<li><p>UPLOAD_ERR_NO_FILE (value = 4)<br>如果用户没有指定上传的文件就提交表单，则返回</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"四、文件上传函数\"><a href=\"#四、文件上传函数\" class=\"headerlink\" title=\"四、文件上传函数\"></a>四、文件上传函数</h2><pre><code>1. is_uploaded_file()\n    is_uploaded_file()函数确定参数filename指定的文件是否使用HTTP POST上传;\n    `例：\n    $file = $_FILES[&quot;file&quot;];\n    print_r($file);\n    if(is_uploaded_file($file[&apos;tmp_name&apos;])){\n        copy($file[&apos;tmp_name&apos;],&quot;test2.txt&quot;);\n    }else{\n        echo &quot;文件上传失败！&quot;;\n    }`\n\n2. move_uploaded_file()\n    move_uploaded_file()作用是将上传文件从临时目录移动到目标目录; 虽然\n    copy()也可以实现同样功能，但move_uploaded_file()还提供了一种额外的\n    功能，它将检查由filename输入参数指定的文件确实是通过http post 上传机制\n    上传的。如果所指定的文件并非上传文件，则移动失败，返回false;\n\n    `例：\n    move_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;],&quot;1/test.jpg&quot;);`        \n</code></pre><h1 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h1><h2 id=\"一-数组的概念：\"><a href=\"#一-数组的概念：\" class=\"headerlink\" title=\"一.数组的概念：\"></a>一.数组的概念：</h2><p>数组可以理解为有序的（键-值)对组成的数据值的集合;</p>\n<blockquote>\n<p>如果我们把变量理解为单个值的容器，那么数组就是可以包含多个值的容器;根据索引值的不同数组分为：索引数组和关联数组;<br>    <code>array(key =&gt; value,key =&gt; value)</code></p>\n</blockquote>\n<h2 id=\"二-创建数组\"><a href=\"#二-创建数组\" class=\"headerlink\" title=\"二.创建数组\"></a>二.创建数组</h2><p>与其它语言的数组实现方式不同，php不需要在创建数组时指定其大小;<br>因为php是一种松散类型的语言，所以甚至不需要在使用前先声明;</p>\n<ul>\n<li><p>索引可以是整型数字或者是字符串;</p>\n<ol>\n<li>索引数组：索引为整数,如果没有指定索引值则默认为零，依次递增;</li>\n<li><p>关联数组：索引为字符串的数组;</p>\n<p>直接对数组变量赋值<br><code>$arr[key] = value; //高版本[value]</code></p>\n</li>\n</ol>\n</li>\n<li><p>使用函数创建数组:range() 建立一个包含指定范围单元的数组</p>\n</li>\n</ul>\n<h2 id=\"三、删除-数组或数组元素\"><a href=\"#三、删除-数组或数组元素\" class=\"headerlink\" title=\"三、删除 数组或数组元素\"></a>三、删除 数组或数组元素</h2><ul>\n<li>unset 释放给定的变量<blockquote>\n<p>注意：删除数组元素不会重建索引;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$arr = array(1,2,3,4,5);</div><div class=\"line\">unset($arr[1]);</div><div class=\"line\">// $arr1 = array_values($arr);//重新要排序下标</div><div class=\"line\">print_r($arr);</div></pre></td></tr></table></figure>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"四、常用的数组函数\"><a href=\"#四、常用的数组函数\" class=\"headerlink\" title=\"四、常用的数组函数\"></a>四、常用的数组函数</h2><ol>\n<li>print_r() 打印数组</li>\n<li>count() 取得数组大小</li>\n<li>in_array() 检查数组中是否包含某个值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$arr = array(1,2,3,4,5);</div><div class=\"line\">if (in_array(11, $arr)) &#123;</div><div class=\"line\">\techo &quot;有&quot;;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &quot;没有&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"五、遍历数组\"><a href=\"#五、遍历数组\" class=\"headerlink\" title=\"五、遍历数组\"></a>五、遍历数组</h2><p><code>arr = [A,B,C,D,E,F]</code></p>\n<pre><code>1. for 循环遍历数组\n2. foreach 循环遍历数组\n3. 使用数组指针遍历数组    \n    * key()         返回数组当前指针元素的索引;\n    * current()     返回数组当前指针元素的值;\n    * next()         将数组指针向前移动一位，并返回当前指针元素的值; 如果超出了数组元素的末尾，则返回FALSE\n    * prev()         将数组指针往回移动一位, 并返回当前指针元素的值; 如果指针本来就位于数组的第一个位置则返回FALSE;\n    * reset()     将指针指向第一个元素，并返回第一个元素的值\n    * end()         将数组指针指向最后一个元素, 并返回最后一个元素的值;\n    * each()         返回数组当前指针元素的键和值,并将指针推进一个位置;如果内部指针越过了数组的末端，则 each() 返回 FALSE。 \n\n&gt;next()和each()的区别next返回值,each返回键和值(数组)\n</code></pre><h2 id=\"六、数组排序\"><a href=\"#六、数组排序\" class=\"headerlink\" title=\"六、数组排序\"></a>六、数组排序</h2><pre><code>1. sort() 、 rsort() 对数组的value值进行升序和降序\n2. ksort()、krsort() 对数组按索引进行升序或降序, 并保持索引关系\n</code></pre><h2 id=\"七、字符串与数组转换\"><a href=\"#七、字符串与数组转换\" class=\"headerlink\" title=\"七、字符串与数组转换\"></a>七、字符串与数组转换</h2><pre><code>1. explode() 返回由字符串组成的数组 \n2. implode() 将数组元素连接成字符串\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$str = &quot;a,b,c,d,e&quot;;</div><div class=\"line\">$arr = explode(&quot;,&quot;, $str);//不加要劈开的标点,会报错</div><div class=\"line\">print_r($arr);</div><div class=\"line\">echo &quot;&lt;br&gt;&quot;;</div><div class=\"line\">$str2 = implode(&quot;&quot;, $arr);//类似js的join</div><div class=\"line\">echo $str2;</div></pre></td></tr></table></figure>\n<h1 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h1><h2 id=\"一、输出字符串\"><a href=\"#一、输出字符串\" class=\"headerlink\" title=\"一、输出字符串\"></a>一、输出字符串</h2><ol>\n<li>echo 是一个语法 ，不是函数<pre><code>echo 没有返回值;\necho 可以输出多个值，使用逗号分隔;\n</code></pre></li>\n<li><p>print     实际上不是一个函数（它是一个语言结构）</p>\n</li>\n<li><p>printf() parseInt(10.55,”8”);//将10.55转化为8进制</p>\n<ul>\n<li>%b二进制输出        //brianry</li>\n<li>%d整数输出            //data</li>\n<li>%f浮点数输出        //float</li>\n<li>%s字符串输出          //string</li>\n<li>printf(“整数：%d”, $str);</li>\n<li>printf(“浮点数：%.2f”, $str);</li>\n<li>printf(“字符串：%s”, $str);</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">printf(&quot;二进制:%b&quot;,100);//11001100</div><div class=\"line\">printf(&quot;二进制:%b&quot;,1);//1</div><div class=\"line\">printf(&quot;整数:%d&quot;,10.451);//10</div><div class=\"line\">printf(&quot;浮点数:%.2f&quot;,10.451);//10.45</div></pre></td></tr></table></figure>\n</li>\n<li><p>sprintf() 功能与printf相同，但不会直接输出结果;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$num = sprintf(&quot;%d&quot;,6.21);//不用echo输出,是不会输出的</div><div class=\"line\">echo $num;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"二、查找与替换\"><a href=\"#二、查找与替换\" class=\"headerlink\" title=\"二、查找与替换\"></a>二、查找与替换</h2><ol>\n<li>strpos()</li>\n</ol>\n<blockquote>\n<p>stripos()与strpos()功能相同，只是查找时不区别大小写 </p>\n<p>第一次出现的位置;如果没有找到则返回FALSE;//类似indexof</p>\n</blockquote>\n<ol>\n<li>str_replace() </li>\n</ol>\n<blockquote>\n<p>str_ireplace()与str_replace()功能相同，只是不区分大小写;<br>str_replace(find,change,str)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$str = &quot;abcdefgdedc&quot;;</div><div class=\"line\">$index = 0;</div><div class=\"line\">$count = 0;</div><div class=\"line\">$num = strpos($str,&quot;d&quot;,$index);//4是从第几个开始找 str.indexOf(&quot;d&quot;,0);</div><div class=\"line\">//类似找父级定位,找d的个数</div><div class=\"line\">while ($num) &#123;</div><div class=\"line\">\t$count++;</div><div class=\"line\">\t$index = $num+1;</div><div class=\"line\">\t// echo $index.&quot;&lt;br&gt;&quot;;//4 8 10</div><div class=\"line\">\t$num = strpos($str, &quot;d&quot;,$index);//下一次</div><div class=\"line\">&#125;</div><div class=\"line\">echo $count;//3</div></pre></td></tr></table></figure>\n<h2 id=\"三、截取字符串-substr\"><a href=\"#三、截取字符串-substr\" class=\"headerlink\" title=\"三、截取字符串    substr()\"></a>三、截取字符串    substr()</h2><ul>\n<li>从start位置取出length长度的字符，字符串位置开始值为零;<br> 如果没有指定length，那么默认一直到字符串末尾;<br> <code>$str = &quot;abcdefdabkjldf&quot;;\n echo substr($str,3,1);//从第三个开始截取,第三个参数截取的长度</code></li>\n</ul>\n<h2 id=\"删除字符串\"><a href=\"#删除字符串\" class=\"headerlink\" title=\"删除字符串\"></a>删除字符串</h2><ol>\n<li>ltrim 函数删除字符串左侧空格或其他预定义字符;</li>\n<li>rtrim 函数删除字符串右侧空格或其他预定义字符;</li>\n<li>trim 函数删除字符串两侧空格或其他预定义字符;</li>\n</ol>\n<h2 id=\"四、其它字符串处理函数\"><a href=\"#四、其它字符串处理函数\" class=\"headerlink\" title=\"四、其它字符串处理函数\"></a>四、其它字符串处理函数</h2><ol>\n<li>strlen() 获取字符串长度</li>\n<li>strtolower() 将字符串转换为小写字母</li>\n<li>strtoupper() 将字符串转换为大写字母</li>\n<li>strrev() 反转字符串</li>\n<li>nl2br() 将字符串中换行 (\\n) 转换成 HTML 换行标签 (<br>)</li>\n<li>strip_tags() 删除字符串中HTML XML PHP 标签</li>\n<li>htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体</li>\n</ol>\n<h1 id=\"正则preg-match-preg-replace-preg-split-preg-grep\"><a href=\"#正则preg-match-preg-replace-preg-split-preg-grep\" class=\"headerlink\" title=\"正则preg_match,preg_replace,preg_split,preg_grep\"></a>正则preg_match,preg_replace,preg_split,preg_grep</h1><h2 id=\"preg-match-preg-match-all\"><a href=\"#preg-match-preg-match-all\" class=\"headerlink\" title=\"preg_match/preg_match_all\"></a>preg_match/preg_match_all</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$str = &quot;内容1内容2内容3内容4&quot;;</div><div class=\"line\">//preg_match(&quot;/内容/&quot;,$str);//如果找到就返回1</div><div class=\"line\">preg_match_all(&quot;/内容/&quot;, $str, $arr);//将要划分的内容,放到$arr里面</div><div class=\"line\">print_r($arr);</div></pre></td></tr></table></figure>\n<p><mark>实例二</mark></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//获取一个页面的部分东西</div><div class=\"line\">\t$con = file_get_contents(&quot;http://www.cnblogs.com/&quot;);</div><div class=\"line\">\t$reg = &apos;/&lt;h3\\&gt;.+&lt;\\/h3&gt;/&apos;;//.表示所有</div><div class=\"line\">\tpreg_match_all($reg, $con,$arr);</div><div class=\"line\">\tprint_r($arr);</div></pre></td></tr></table></figure>\n<h2 id=\"preg-replace\"><a href=\"#preg-replace\" class=\"headerlink\" title=\"preg_replace\"></a>preg_replace</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$str = &quot;abc@163.com,abc@163.com&quot;;</div><div class=\"line\">$reg = &apos;/@\\d+/&apos;;//js可以不加&quot;&quot;,但是php必须加&quot;&quot;</div><div class=\"line\">$str = preg_replace($reg, &quot;4ddd&quot;, $str);</div><div class=\"line\">echo $str;</div></pre></td></tr></table></figure>\n<h2 id=\"preg-split\"><a href=\"#preg-split\" class=\"headerlink\" title=\"preg_split\"></a>preg_split</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$str = &quot;abc1423de456&quot;;</div><div class=\"line\">// $reg = &quot;/\\d+/&quot;;//以数字来劈开</div><div class=\"line\">$reg = &quot;/[a-z]+/&quot;;//以字母来劈开  &quot;,1423,456&quot;;</div><div class=\"line\">$arr = preg_split($reg, $str);</div><div class=\"line\">print_r($arr);</div></pre></td></tr></table></figure>\n<h2 id=\"preg-grep\"><a href=\"#preg-grep\" class=\"headerlink\" title=\"preg_grep\"></a>preg_grep</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//判断是否有数字,由的话就保存起来</div><div class=\"line\">$arr = [12,&apos;abc&apos;,53,&apos;c&apos;,10];</div><div class=\"line\"></div><div class=\"line\">$reg = &apos;/\\d/&apos;;</div><div class=\"line\"></div><div class=\"line\">$newarr = preg_grep($reg,$arr);//返回的下标不会变</div><div class=\"line\"></div><div class=\"line\">print_r($newarr);</div></pre></td></tr></table></figure>\n<h1 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h1><h2 id=\"注意的步骤\"><a href=\"#注意的步骤\" class=\"headerlink\" title=\"注意的步骤\"></a>注意的步骤</h2><ul>\n<li>md5加密是32个字节</li>\n<li>A_I是自增</li>\n<li>排序规格:utf8_general_ci</li>\n<li>字段数:表示有几列        </li>\n<li>在控制台写代码 ==&gt;执行是ctrl + enter</li>\n<li>再控制台写代码要注意insert into user (<code>username</code>) values (‘ass’) ===&gt;字段名一定要加``</li>\n</ul>\n<h2 id=\"一、SQL-语言简介\"><a href=\"#一、SQL-语言简介\" class=\"headerlink\" title=\"一、SQL 语言简介\"></a>一、SQL 语言简介</h2><ul>\n<li><p>SQL (structured Query Language) 结构化查询语言;<br>主要用途是构造各种数据库系统操作指令，如 SELECT、INSERT、UPDATE、DELETE;</p>\n</li>\n<li><p>SQL命令可以分类以下三大类别：</p>\n</li>\n</ul>\n<ol>\n<li><p>DML(Data Manipulation Language 数据处理语言）：</p>\n<blockquote>\n<p>这类命令主要包括 SELECT、INSERT、UPDATE、DELETE等用来从数据表读出数据，把数据存入数据表或是对数据表里的现有记录进行修改的命令;</p>\n</blockquote>\n</li>\n<li><p>DDL(Data Definition Language 数据定义语言）：</p>\n<blockquote>\n<p>这类命令主要包括CREATE TABLE、ALTER TABLE 等用来定义和改变数据库结构的命令;</p>\n</blockquote>\n</li>\n<li><p>DCL(Data Control Language 数据控制语言）：</p>\n<blockquote>\n<p>这类命令主要包括GRANT、REVOKE以及另外几个用来帮助人们设置和调整MySQL访问控制机制的SQL命令; </p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"二、查询-SELECT\"><a href=\"#二、查询-SELECT\" class=\"headerlink\" title=\"二、查询(SELECT)\"></a>二、查询(SELECT)</h2><ol>\n<li><p>简单查询<br> <code>SELECT * FROM tablename</code></p>\n</li>\n<li><p>限制查询结果中的数据列个数<br> <code>SELECT column1,column2 FROM tablename</code></p>\n</li>\n<li><p>确定数据表里有多少条数据记录<br> <code>SELECT COUNT(id) FROM tablename</code></p>\n<blockquote>\n<p>//计算的同时改变字段名as:SELECT COUNT(id) as len FROM tablename//把字段名改为len</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"三、WHERE子句\"><a href=\"#三、WHERE子句\" class=\"headerlink\" title=\"三、WHERE子句\"></a>三、WHERE子句</h2><ul>\n<li>WHERE子句设置查询条件，过滤掉不需要的数据行。<br>  例如查询年龄大于20的记录： SELECT * FROM usertable WHERE age&gt;20<br>  WHERE子句可包括各种条件运算符：<ol>\n<li>比较运算符<br> `<br> =        等于<blockquote>\n<pre><code>大于\n</code></pre><p>=        大于等于<br> &lt;        小于<br> &lt;=        小于等于<br> &lt;&gt;        不等于`</p>\n</blockquote>\n</li>\n<li>逻辑运算符<ul>\n<li>AND    如果组合的条件都是TRUE,返回TRUE</li>\n<li>OR    如果组合的条件其一是TRUE,返回TRUE</li>\n<li>NOT    如果条件是FALSE,返回TRUE</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"四、限制查询结果中的数据记录个数-LIMIT\"><a href=\"#四、限制查询结果中的数据记录个数-LIMIT\" class=\"headerlink\" title=\"四、限制查询结果中的数据记录个数(LIMIT)\"></a>四、限制查询结果中的数据记录个数(LIMIT)</h2><p>LIMIT子句用于强制SELECT语句返回指定的记录数。<br>LIMIT接受一个或两个数字参数。参数必须是一个整数常量。<br><mark>如果给定两个参数，第一个参数指定第一个返回记录行的偏移量，第二个参数指定返回记录行的最大数目。</mark></p>\n<blockquote>\n<p>注意：初始记录行的偏移量是0而不是1。 (适合用于分页)</p>\n</blockquote>\n<pre><code>`例：\n    检索前5个记录行  \n    SELECT * FROM table LIMIT 5;     \n\n    检索记录行 6-15\n    SELECT * FROM table LIMIT 5,10; `\n</code></pre><h2 id=\"五、对查询结果进行排序-ORDER-BY\"><a href=\"#五、对查询结果进行排序-ORDER-BY\" class=\"headerlink\" title=\"五、对查询结果进行排序 (ORDER BY)\"></a>五、对查询结果进行排序 (ORDER BY)</h2><p>  使用ORDER BY子句对查询返回的结果排序。</p>\n<ul>\n<li>ORDER BY子句的语法格式为： ORDER BY {column_name [ASC|DESC]} [,…n] </li>\n<li><p>其中ASC表示升序，为默认值，DESC为降序 </p>\n<p>  <code>例：\n  SELECT * FROM user ORDER BY uid ASC\n  SELECT * FROM user ORDER BY uid DESC\n  SELECT * FROM user ORDER BY regdate DESC,username ASC;</code></p>\n</li>\n</ul>\n<h3 id=\"六、插入数据记录-INSERT\"><a href=\"#六、插入数据记录-INSERT\" class=\"headerlink\" title=\"六、插入数据记录(INSERT)\"></a>六、插入数据记录(INSERT)</h3><pre><code>`例：\nINSERT INTO user (username,password) VALUES (&apos;admin&apos;,&apos;123456&apos;)`\n</code></pre><ul>\n<li>一次插入多条记录<br><code>INSERT INTO user (username, password) VALUES (&#39;user1&#39;, &#39;123456&#39;), (&#39;user2&#39;,&#39;123456&#39;)</code>        </li>\n</ul>\n<h2 id=\"七、修改数据记录（UPDATE）\"><a href=\"#七、修改数据记录（UPDATE）\" class=\"headerlink\" title=\"七、修改数据记录（UPDATE）\"></a>七、修改数据记录（UPDATE）</h2><pre><code>`例：\nUPDATE user\nSET username = &apos;admin1&apos;, passwd =&apos;12345678&apos;  WHERE uid = 10`\n</code></pre><h2 id=\"八、删除数据记录（DELETE）\"><a href=\"#八、删除数据记录（DELETE）\" class=\"headerlink\" title=\"八、删除数据记录（DELETE）\"></a>八、删除数据记录（DELETE）</h2><pre><code>`例：\nDELETE FROM user WHERE uid = 10`\n</code></pre>","updated":"2016-12-24T09:15:53.000Z","link":"","tags":[]},{"title":"canvas","date":"2016-11-01T12:49:57.000Z","path":"2016/11/01/Day39_canvas2/","text":"图形的组合方式 source-over：为属性globalCompositeOperation属性的默认值表示新图形覆盖在原图形之上 source-atop：只绘制新图形与原图形相重叠的部分，以及原图形其他部分 source-in：只绘制新图形与原图形重叠的部分，新图形与原图形其他部分变透明 source-out：只绘制新图形与原图形不重叠的部分；新图形与原图形其他部分变透明 destination-over：表示原图形覆盖在新图形之上destination-atop：只绘制原图形与新图形相重叠的部分，以及新图形其他部分\u0013 destination-in：只绘制原图形与新图形重叠的部分，原图形与新图形其他部分变透明 destination-out：只绘制原图形与新图形不重叠的部分；原图形与新图形其他部分变透明 lighter：原有图形与新图形都绘制，重叠部分加色处理 xor：只绘制原、新图形不重叠之处，其他做透明色 copy：只绘制新图形，覆盖掉原图 实例:刮彩票 注意点style.left获取的是字符串(带px),offsetLeft获取的是数值 12345678910111213141516171819202122232425262728293031323334&lt;div class=&quot;wrap&quot;&gt; 谢谢惠顾! &lt;canvas&gt;&lt;/canvas&gt;&lt;/div&gt;var wrap = document.querySelector(&quot;.wrap&quot;); var canvas = wrap.children[0]; //设置canvas的实际宽度和高度 canvas.width = wrap.clientWidth; canvas.height = wrap.clientHeight; var ctx = canvas.getContext(&quot;2d&quot;); //填充画布颜色 ctx.fillStyle = &quot;#ccc&quot;; ctx.fillRect(0,0,canvas.width,canvas.height); canvas.onmousedown = function(e)&#123; var disX = wrap.offsetLeft-1;//-1是减去边框 var disY = wrap.offsetTop-1; ctx.globalCompositeOperation = &quot;destination-out&quot;; ctx.beginPath(); document.onmousemove = function(e)&#123; var x = e.clientX - disX; var y = e.clientY - disY; // ctx.arc(x,y,5,0,Math.PI*2); ctx.lineWidth = 10; ctx.lineCap = &quot;round&quot;; ctx.lineTo(x,y); ctx.stroke(); &#125; return false; &#125; document.onmouseup = function()&#123; document.onmousemove = &quot;&quot;; &#125; createPattern是图片的平铺 createPattern(img,type) img：图片 type：1) repeat整个画布平铺 2) repeat-x在x轴方向上平铺 3) repeat-y在y轴方向上平铺 4) no-repeat不平铺 注意点:img是有onload事件##.clip()\u0010剪切 12345678910var canvas = document.querySelector(&quot;canvas&quot;);var ctx = canvas.getContext(&quot;2d&quot;);var img = document.querySelector(&quot;img&quot;);ctx.rect(100,100,400,400);//画一个空心矩形ctx.clip();//剪切img.onload = function()&#123; var c = ctx.createPattern(img,&quot;repeat&quot;); ctx.fillStyle = c; ctx.fillRect(0,0,800,800);&#125; drawImage 绘制图像：把图片绘制在画布上面drawImage(img,x,y) 1)img：图片2)x：图片横坐标的起始值3)y：图片纵坐标的起始值 绘制固定宽高的图像：drawImage(img,x,y,w,h) 1)img：图片;2)x：图片横坐标的起始值;3)y：图片纵坐标的起始值;4)w：在画布中图片显示的宽度;5)h：在画布中图片显示的高度; 复制或放大图像局部：drawImage(img,x,y,w,h,rx,ry,rw,rh) 1)img：图片2)x、y：源图片的坐标3)w、h：在源图片上裁剪的宽、高4)rx、ry：显示在画布中的坐标5)rw、rh：显示在画布中的宽、高 getImageData,putImageData和DataURL必须要再服务器上跑 getImageData 是对应rgba getImageData的参数有4个,putImageData的参数有3(像drawImage) .data是获取像素点数据 注意点:颜色的取反 255-num 和 num 是相反颜色 例如:rgb(0,0,0)–(黑色) 那么rgb(255,255,255)–(白色) 把canvas里面的图片数据转成base64的地址数据格式 base64是可以加密也可以解密 123456789101112131415161718192021222324252627282930var btn = document.querySelector(&apos;button&apos;);var canvas = document.getElementsByTagName(&apos;canvas&apos;)[0];var img = document.getElementsByTagName(&apos;img&apos;)[0];var ctx = canvas.getContext(&apos;2d&apos;);img.onload = function()&#123; //获取画板像素点数据 ctx.drawImage(img,0,0); var imageData = ctx.getImageData(0,0,100,203); // console.log(data); //颜色取反 255-本来颜色=取反的颜色 //换为黑白色 for (var i = 0;i&lt;imageData.data.length; i+=4) &#123; var c = imageData.data[i]*.3+imageData.data[i+1]*.59+imageData.data[i+2]*.11;//是黑白 imageData.data[i] = c; imageData.data[i+1] = c; imageData.data[i+2] = c; &#125; &lt;!--是获取颜色的反色 for (var i = 0;i&lt;imageData.data.length; i+=4) &#123;//为什么加4 rgba a:255 imageData.data[i] = 255-imageData.data[i];//r imageData.data[i+1] = 255-imageData.data[i+1];//g imageData.data[i+2] = 255-imageData.data[i+2];//b &#125;--&gt; ctx.putImageData(imageData,0,0); //把canvas里面的图片数据转成base64的地址数据格式 base64是可以加密也可以解密 var url = canvas.toDataURL(&quot;image/png&quot;); console.log(url);&#125; 时钟实例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; canvas&#123; border:1px solid black; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;canvas width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;&lt;/body&gt;&lt;script type=&quot;text/javascript&quot;&gt;var canvas = document.querySelector(&quot;canvas&quot;);var ctx = canvas.getContext(&quot;2d&quot;);ctx.translate(200,200);//画背景bg();function bg()&#123; var deg = 0; var r = 150; ctx.beginPath(); for (var i = 0;i &lt; 13;i++) &#123; // setInterval(function()&#123; //看动画效果 deg += 30; var x = Math.sin(Math.PI/180*deg)*r; var y = -Math.cos(Math.PI/180*deg)*r; ctx.lineTo(x,y); // ctx.arc(x,y,5,0,Math.PI*2); // ctx.stroke(); // &#125;,30); &#125; ctx.closePath(); //填充颜色 var c = ctx.createRadialGradient(0,0,0,0,0,150); c.addColorStop(0,&quot;#22f&quot;); c.addColorStop(1,&quot;#0ef&quot;); ctx.fillStyle = c; ctx.fill();&#125;//画刻度kedu();function kedu()&#123; var deg = 0; for (var i = 0;i &lt; 60;i++) &#123; ctx.save(); ctx.rotate(Math.PI/30*i); ctx.beginPath(); ctx.moveTo(0,-150); if (i%5==0) &#123; ctx.lineWidth = 5; ctx.lineTo(0,-135); &#125;else&#123; ctx.lineWidth = 3; ctx.lineTo(0,-138); &#125; ctx.strokeStyle = &quot;white&quot;; ctx.stroke(); ctx.restore(); &#125;&#125;//画数字num();function num()&#123; for (var i = 1;i &lt; 13;i++) &#123; // ctx.save(); // ctx.rotate(Math.PI/6*i); var x = Math.sin(Math.PI/6*i)*120; var y = -Math.cos(Math.PI/6*i)*120; ctx.font = &quot;20px 黑体&quot;; ctx.textBaseline = &quot;middle&quot;; ctx.textAlign = &quot;center&quot;; ctx.fillStyle = &quot;white&quot;; ctx.fillText(i,x,y+3); // ctx.restore(); &#125;&#125;function sFn(deg)&#123; ctx.save(); ctx.rotate(Math.PI/180*deg); ctx.beginPath(); ctx.moveTo(0,5); ctx.lineTo(0,-120); ctx.strokeStyle = &quot;white&quot;; ctx.stroke(); ctx.closePath(); ctx.restore();&#125;//分针// mFn(30);function mFn(deg)&#123; ctx.save(); ctx.rotate(Math.PI/180*deg); ctx.beginPath(); ctx.moveTo(0,5); ctx.lineTo(0,-100); ctx.strokeStyle = &quot;white&quot;; ctx.lineCap = &quot;round&quot;;//让线的两边变为圆 ctx.lineWidth = 3; ctx.stroke(); ctx.closePath(); ctx.restore();&#125;// hFn(60);function hFn(deg)&#123; ctx.save(); ctx.rotate(Math.PI/180*deg); ctx.beginPath(); ctx.moveTo(0,5);//-2.5是想让旋转更为中心点 ctx.lineTo(0,-80); ctx.strokeStyle = &quot;white&quot;; ctx.lineWidth = 5; ctx.stroke(); ctx.closePath(); ctx.restore();&#125;//针setInterval(function()&#123; var date = new Date(); var s = date.getSeconds(); var m = date.getMinutes(); var h = date.getHours(); ctx.clearRect(-200,-200,400,400); bg(); kedu(); num(); sFn(s*6); mFn(m*6); hFn(h*30+m*6/360*30);&#125;,1000);&lt;/script&gt;&lt;/html&gt;","content":"<h2 id=\"图形的组合方式\"><a href=\"#图形的组合方式\" class=\"headerlink\" title=\"图形的组合方式\"></a>图形的组合方式</h2><ul>\n<li>source-over：为属性globalCompositeOperation属性的默认值表示新图形覆盖在原图形之上</li>\n<li>source-atop：只绘制新图形与原图形相重叠的部分，以及原图形其他部分</li>\n<li>source-in：只绘制新图形与原图形重叠的部分，新图形与原图形其他部分变透明</li>\n<li>source-out：只绘制新图形与原图形不重叠的部分；新图形与原图形其他部分变透明</li>\n<li>destination-over：表示原图形覆盖在新图形之上destination-atop：只绘制原图形与新图形相重叠的部分，以及新图形其他部分\u0013</li>\n<li>destination-in：只绘制原图形与新图形重叠的部分，原图形与新图形其他部分变透明</li>\n<li>destination-out：只绘制原图形与新图形不重叠的部分；原图形与新图形其他部分变透明</li>\n<li>lighter：原有图形与新图形都绘制，重叠部分加色处理</li>\n<li>xor：只绘制原、新图形不重叠之处，其他做透明色</li>\n<li>copy：只绘制新图形，覆盖掉原图</li>\n</ul>\n<h3 id=\"实例-刮彩票\"><a href=\"#实例-刮彩票\" class=\"headerlink\" title=\"实例:刮彩票\"></a>实例:刮彩票</h3><ul>\n<li>注意点style.left获取的是字符串(带px),offsetLeft获取的是数值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;wrap&quot;&gt;</div><div class=\"line\">\t谢谢惠顾!</div><div class=\"line\">\t&lt;canvas&gt;&lt;/canvas&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">var wrap = document.querySelector(&quot;.wrap&quot;);</div><div class=\"line\">\tvar canvas = wrap.children[0];</div><div class=\"line\">\t//设置canvas的实际宽度和高度</div><div class=\"line\">\tcanvas.width = wrap.clientWidth;</div><div class=\"line\">\tcanvas.height = wrap.clientHeight;</div><div class=\"line\">\tvar ctx = canvas.getContext(&quot;2d&quot;);</div><div class=\"line\">\t//填充画布颜色</div><div class=\"line\">\tctx.fillStyle = &quot;#ccc&quot;;</div><div class=\"line\">\tctx.fillRect(0,0,canvas.width,canvas.height);</div><div class=\"line\">\tcanvas.onmousedown = function(e)&#123;</div><div class=\"line\">\t\tvar disX = wrap.offsetLeft-1;//-1是减去边框</div><div class=\"line\">\t\tvar disY = wrap.offsetTop-1;</div><div class=\"line\">\t\tctx.globalCompositeOperation = &quot;destination-out&quot;;</div><div class=\"line\">\t\tctx.beginPath();</div><div class=\"line\">\t\tdocument.onmousemove = function(e)&#123;</div><div class=\"line\">\t\t\tvar x = e.clientX - disX;</div><div class=\"line\">\t\t\tvar y = e.clientY - disY;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t// ctx.arc(x,y,5,0,Math.PI*2);</div><div class=\"line\">\t\t\tctx.lineWidth = 10;</div><div class=\"line\">\t\t\tctx.lineCap = &quot;round&quot;;</div><div class=\"line\">\t\t\tctx.lineTo(x,y);</div><div class=\"line\">\t\t\tctx.stroke();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\treturn false;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tdocument.onmouseup = function()&#123;</div><div class=\"line\">\t\tdocument.onmousemove = &quot;&quot;;</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"createPattern是图片的平铺\"><a href=\"#createPattern是图片的平铺\" class=\"headerlink\" title=\"createPattern是图片的平铺\"></a>createPattern是图片的平铺</h2><ul>\n<li>createPattern(img,type)</li>\n<li>img：图片</li>\n<li>type：<pre><code>1) repeat整个画布平铺\n2) repeat-x在x轴方向上平铺\n3) repeat-y在y轴方向上平铺\n4) no-repeat不平铺\n</code></pre></li>\n<li>注意点:img是有onload事件<br>##.clip()\u0010剪切</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">var canvas = document.querySelector(&quot;canvas&quot;);</div><div class=\"line\">var ctx = canvas.getContext(&quot;2d&quot;);</div><div class=\"line\">var img = document.querySelector(&quot;img&quot;);</div><div class=\"line\">ctx.rect(100,100,400,400);//画一个空心矩形</div><div class=\"line\">ctx.clip();//剪切</div><div class=\"line\">img.onload = function()&#123;</div><div class=\"line\">\tvar c = ctx.createPattern(img,&quot;repeat&quot;);</div><div class=\"line\">\tctx.fillStyle = c;</div><div class=\"line\">\tctx.fillRect(0,0,800,800);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"drawImage\"><a href=\"#drawImage\" class=\"headerlink\" title=\"drawImage\"></a>drawImage</h2><ul>\n<li><p>绘制图像：把图片绘制在画布上面drawImage(img,x,y)</p>\n<blockquote>\n<p>1)img：图片<br>2)x：图片横坐标的起始值<br>3)y：图片纵坐标的起始值</p>\n</blockquote>\n</li>\n<li><p>绘制固定宽高的图像：drawImage(img,x,y,w,h)</p>\n<blockquote>\n<p>1)img：图片;<br>2)x：图片横坐标的起始值;<br>3)y：图片纵坐标的起始值;<br>4)w：在画布中图片显示的宽度;<br>5)h：在画布中图片显示的高度;</p>\n</blockquote>\n</li>\n<li><p>复制或放大图像局部：drawImage(img,x,y,w,h,rx,ry,rw,rh)</p>\n<blockquote>\n<p>1)img：图片<br>2)x、y：源图片的坐标<br>3)w、h：在源图片上裁剪的宽、高<br>4)rx、ry：显示在画布中的坐标<br>5)rw、rh：显示在画布中的宽、高 </p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"getImageData-putImageData和DataURL必须要再服务器上跑\"><a href=\"#getImageData-putImageData和DataURL必须要再服务器上跑\" class=\"headerlink\" title=\"getImageData,putImageData和DataURL必须要再服务器上跑\"></a>getImageData,putImageData和DataURL必须要再服务器上跑</h2><ul>\n<li>getImageData 是对应rgba</li>\n<li>getImageData的参数有4个,putImageData的参数有3(像drawImage)</li>\n<li>.data是获取像素点数据</li>\n<li>注意点:颜色的取反 255-num 和 num 是相反颜色</li>\n<li>例如:rgb(0,0,0)–(黑色) 那么rgb(255,255,255)–(白色)</li>\n<li>把canvas里面的图片数据转成base64的地址数据格式  base64是可以加密也可以解密</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">var btn = document.querySelector(&apos;button&apos;);</div><div class=\"line\">var canvas = document.getElementsByTagName(&apos;canvas&apos;)[0];</div><div class=\"line\">var img = document.getElementsByTagName(&apos;img&apos;)[0];</div><div class=\"line\">var ctx = canvas.getContext(&apos;2d&apos;);</div><div class=\"line\">img.onload = function()&#123;</div><div class=\"line\">\t//获取画板像素点数据</div><div class=\"line\">\tctx.drawImage(img,0,0);</div><div class=\"line\">\tvar imageData = ctx.getImageData(0,0,100,203);</div><div class=\"line\">\t// console.log(data);</div><div class=\"line\">\t//颜色取反 255-本来颜色=取反的颜色</div><div class=\"line\">\t//换为黑白色</div><div class=\"line\">\tfor (var i = 0;i&lt;imageData.data.length; i+=4) &#123;</div><div class=\"line\">\t\tvar c = imageData.data[i]*.3+imageData.data[i+1]*.59+imageData.data[i+2]*.11;//是黑白</div><div class=\"line\"></div><div class=\"line\">\t\timageData.data[i] = c;</div><div class=\"line\">\t\timageData.data[i+1] = c;</div><div class=\"line\">\t\timageData.data[i+2] = c;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t&lt;!--是获取颜色的反色</div><div class=\"line\">\tfor (var i = 0;i&lt;imageData.data.length; i+=4) &#123;//为什么加4 rgba a:255</div><div class=\"line\">\t\timageData.data[i] = 255-imageData.data[i];//r</div><div class=\"line\">\t\timageData.data[i+1] = 255-imageData.data[i+1];//g</div><div class=\"line\">\t\timageData.data[i+2] = 255-imageData.data[i+2];//b</div><div class=\"line\">\t&#125;--&gt;</div><div class=\"line\">\t</div><div class=\"line\">\tctx.putImageData(imageData,0,0);</div><div class=\"line\">\t//把canvas里面的图片数据转成base64的地址数据格式  base64是可以加密也可以解密</div><div class=\"line\">\tvar url = canvas.toDataURL(&quot;image/png&quot;);</div><div class=\"line\">\tconsole.log(url);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"时钟实例\"><a href=\"#时钟实例\" class=\"headerlink\" title=\"时钟实例\"></a>时钟实例</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">\t&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">\t&lt;title&gt;Document&lt;/title&gt;</div><div class=\"line\">\t&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">\tcanvas&#123;</div><div class=\"line\">\t\tborder:1px solid black;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">\t&lt;canvas width=&quot;400&quot; height=&quot;400&quot;&gt;&lt;/canvas&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">var canvas = document.querySelector(&quot;canvas&quot;);</div><div class=\"line\">var ctx = canvas.getContext(&quot;2d&quot;);</div><div class=\"line\">ctx.translate(200,200);</div><div class=\"line\"></div><div class=\"line\">//画背景</div><div class=\"line\">bg();</div><div class=\"line\">function bg()&#123;</div><div class=\"line\">\tvar deg = 0;</div><div class=\"line\">\tvar r = 150;</div><div class=\"line\">\tctx.beginPath();</div><div class=\"line\">\tfor (var i = 0;i &lt; 13;i++) &#123;</div><div class=\"line\">\t\t// setInterval(function()&#123; //看动画效果</div><div class=\"line\">\t\tdeg += 30;</div><div class=\"line\">\t\tvar x = Math.sin(Math.PI/180*deg)*r;</div><div class=\"line\">\t\tvar y = -Math.cos(Math.PI/180*deg)*r;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\tctx.lineTo(x,y);</div><div class=\"line\">\t\t// ctx.arc(x,y,5,0,Math.PI*2);</div><div class=\"line\">\t\t// ctx.stroke();</div><div class=\"line\"></div><div class=\"line\">\t\t// &#125;,30);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tctx.closePath();</div><div class=\"line\">\t//填充颜色</div><div class=\"line\">\tvar c = ctx.createRadialGradient(0,0,0,0,0,150);</div><div class=\"line\">\tc.addColorStop(0,&quot;#22f&quot;);</div><div class=\"line\">\tc.addColorStop(1,&quot;#0ef&quot;);</div><div class=\"line\">\tctx.fillStyle = c;</div><div class=\"line\">\tctx.fill();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//画刻度</div><div class=\"line\">kedu();</div><div class=\"line\">function kedu()&#123;</div><div class=\"line\">\tvar deg = 0;</div><div class=\"line\">\tfor (var i = 0;i &lt; 60;i++) &#123;</div><div class=\"line\">\t\tctx.save();</div><div class=\"line\">\t\tctx.rotate(Math.PI/30*i);</div><div class=\"line\">\t\tctx.beginPath();</div><div class=\"line\">\t\tctx.moveTo(0,-150);</div><div class=\"line\">\t\tif (i%5==0) &#123;</div><div class=\"line\">\t\t\tctx.lineWidth = 5;</div><div class=\"line\">\t\t\tctx.lineTo(0,-135);</div><div class=\"line\">\t\t&#125;else&#123;</div><div class=\"line\">\t\t\tctx.lineWidth = 3;</div><div class=\"line\">\t\t\tctx.lineTo(0,-138);</div><div class=\"line\">\t\t&#125;\t</div><div class=\"line\">\t\tctx.strokeStyle = &quot;white&quot;;</div><div class=\"line\">\t\tctx.stroke();</div><div class=\"line\">\t\tctx.restore();</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//画数字</div><div class=\"line\">num();</div><div class=\"line\">function num()&#123;</div><div class=\"line\">\tfor (var i = 1;i &lt; 13;i++) &#123;</div><div class=\"line\">\t\t// ctx.save();</div><div class=\"line\">\t\t// ctx.rotate(Math.PI/6*i);</div><div class=\"line\">\t\tvar x = Math.sin(Math.PI/6*i)*120;</div><div class=\"line\">\t\tvar y = -Math.cos(Math.PI/6*i)*120;</div><div class=\"line\">\t\tctx.font = &quot;20px 黑体&quot;;</div><div class=\"line\">\t\tctx.textBaseline = &quot;middle&quot;;</div><div class=\"line\">\t\tctx.textAlign = &quot;center&quot;;</div><div class=\"line\">\t\tctx.fillStyle = &quot;white&quot;;</div><div class=\"line\">\t\tctx.fillText(i,x,y+3);</div><div class=\"line\">\t\t// ctx.restore();</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function sFn(deg)&#123;</div><div class=\"line\">\tctx.save();</div><div class=\"line\">\tctx.rotate(Math.PI/180*deg);</div><div class=\"line\">\tctx.beginPath();</div><div class=\"line\">\tctx.moveTo(0,5);</div><div class=\"line\">\tctx.lineTo(0,-120);</div><div class=\"line\">\tctx.strokeStyle = &quot;white&quot;;</div><div class=\"line\">\tctx.stroke();</div><div class=\"line\">\tctx.closePath();</div><div class=\"line\">\tctx.restore();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//分针</div><div class=\"line\">// mFn(30);</div><div class=\"line\">function mFn(deg)&#123;</div><div class=\"line\">\tctx.save();</div><div class=\"line\">\tctx.rotate(Math.PI/180*deg);</div><div class=\"line\">\tctx.beginPath();</div><div class=\"line\">\tctx.moveTo(0,5);</div><div class=\"line\">\tctx.lineTo(0,-100);</div><div class=\"line\">\tctx.strokeStyle = &quot;white&quot;;</div><div class=\"line\">\tctx.lineCap = &quot;round&quot;;//让线的两边变为圆</div><div class=\"line\">\tctx.lineWidth = 3;</div><div class=\"line\">\tctx.stroke();</div><div class=\"line\">\tctx.closePath();</div><div class=\"line\">\tctx.restore();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// hFn(60);</div><div class=\"line\">function hFn(deg)&#123;</div><div class=\"line\">\tctx.save();</div><div class=\"line\">\tctx.rotate(Math.PI/180*deg);</div><div class=\"line\">\tctx.beginPath();</div><div class=\"line\">\tctx.moveTo(0,5);//-2.5是想让旋转更为中心点</div><div class=\"line\">\tctx.lineTo(0,-80);</div><div class=\"line\">\tctx.strokeStyle = &quot;white&quot;;</div><div class=\"line\">\tctx.lineWidth = 5;</div><div class=\"line\">\tctx.stroke();</div><div class=\"line\">\tctx.closePath();</div><div class=\"line\">\tctx.restore();</div><div class=\"line\">&#125;</div><div class=\"line\">//针</div><div class=\"line\">setInterval(function()&#123;</div><div class=\"line\">\tvar date = new Date();</div><div class=\"line\">\tvar s = date.getSeconds();</div><div class=\"line\">\tvar m = date.getMinutes();</div><div class=\"line\">\tvar h = date.getHours();</div><div class=\"line\">\tctx.clearRect(-200,-200,400,400);</div><div class=\"line\">\tbg();</div><div class=\"line\">\tkedu();</div><div class=\"line\">\tnum();</div><div class=\"line\">\t</div><div class=\"line\">\tsFn(s*6);</div><div class=\"line\">\tmFn(m*6);</div><div class=\"line\">\thFn(h*30+m*6/360*30);</div><div class=\"line\">&#125;,1000);</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n","updated":"2016-12-24T09:15:15.000Z","link":"","tags":[]}]